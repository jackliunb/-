//第一题
trait Time {
    fn time(&self) -> u8;
}

fn main() {
    let light = TrafficLight::Red;
    println!("light is: {}", light.time());
    let light = TrafficLight::Green;
    println!("green time is {}", light.time());
    let light = TrafficLight::Yellow;
    println!("yellow time is {}", light.time());
}

enum TrafficLight {
    Red,
    Green,
    Yellow,
}

impl Time for TrafficLight {
    fn time(&self) -> u8 {
        match self {
            Self::Red => 30,
            Self::Green => 40,
            Self::Yellow => 3,
        }
    }
}

//第二题未做出来

//第三题
struct Rectangle {
    width: u32,
    length: u32,
}

impl Rectangle {
    fn area(&self) -> u32 {
        self.width * self.length
    }
}

fn main() {
    let rect = Rectangle {
        width: 30,
        length: 50,
    };
    println!("{}", rect.area());
}
